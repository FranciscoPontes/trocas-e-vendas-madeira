[{"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\ReduxStore\\reducer.js":"3","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\NavBar\\NavBar.js":"4","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\MySells\\MySells.js":"5","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\ReduxStore\\actionTypes.js":"6","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\NovaVenda\\NovaVenda.js":"7","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\HomePage\\HomePage.js":"8","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\Firebase\\Firebase.js":"9","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\Spinner.js":"10","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\TextDisplay.js":"11","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\Card\\Card.js":"12","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\Button.js":"13","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\BulkImagePreview\\BulkImagePreview.js":"14","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\Algolia\\Algolia.js":"15","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\BoxList\\BoxList.js":"16","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js":"17"},{"size":735,"mtime":1609792658495,"results":"18","hashOfConfig":"19"},{"size":840,"mtime":1609267524355,"results":"20","hashOfConfig":"19"},{"size":5067,"mtime":1609931424900,"results":"21","hashOfConfig":"19"},{"size":1663,"mtime":1609267524414,"results":"22","hashOfConfig":"19"},{"size":2631,"mtime":1609867998627,"results":"23","hashOfConfig":"19"},{"size":649,"mtime":1609931388956,"results":"24","hashOfConfig":"19"},{"size":5195,"mtime":1609869879575,"results":"25","hashOfConfig":"19"},{"size":4255,"mtime":1609932839794,"results":"26","hashOfConfig":"19"},{"size":6663,"mtime":1609936230919,"results":"27","hashOfConfig":"19"},{"size":170,"mtime":1609444648858,"results":"28","hashOfConfig":"19"},{"size":273,"mtime":1609512317907,"results":"29","hashOfConfig":"19"},{"size":6261,"mtime":1609867998667,"results":"30","hashOfConfig":"19"},{"size":369,"mtime":1609267524463,"results":"31","hashOfConfig":"19"},{"size":1177,"mtime":1609509601577,"results":"32","hashOfConfig":"19"},{"size":661,"mtime":1609927685792,"results":"33","hashOfConfig":"19"},{"size":867,"mtime":1609520567604,"results":"34","hashOfConfig":"19"},{"size":3996,"mtime":1609936969417,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"6x0sug",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\index.js",[],["75","76"],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\ReduxStore\\reducer.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\NavBar\\NavBar.js",["77"],"import React from 'react';\r\nimport './NavBar.css';\r\nimport Flag from '../images/madeira-flag.png';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../Firebase/Firebase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport * as actionTypes from '../ReduxStore/actionTypes';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst NavBar = props => {\r\n\r\n    const logout = () => {\r\n        const confirmation = window.confirm(\"Continuar para logout?\");\r\n        if ( !confirmation ) return;\r\n        firebase.auth().signOut().then(function() {\r\n        // Sign-out successful.\r\n        props.logout();\r\n        }).catch(function(error) {\r\n            // An error happened.\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <NavLink to=\"/\"><img src={Flag} alt=\"madeira-flag\" height=\"100%\"/></NavLink>\r\n            \r\n            <h3>Trocas e vendas Madeira</h3>\r\n            <div className=\"google-account-info\">\r\n            { props.user ? <Chip className=\"acc-chip\"\r\n                avatar={<Avatar alt={props.user.name} src={props.user.photo} className=\"acc-ava\"/>}\r\n                label={props.user.name} onDelete={logout}\r\n            /> \r\n            : null}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch({type: actionTypes.LOGOUT_USER})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NavBar);","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\MySells\\MySells.js",["78","79"],"import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as ReducerAPI from '../ReduxStore/reducer';\r\nimport * as actionTypes from '../ReduxStore/actionTypes';\r\nimport './MySells.css';\r\nimport Spinner from '../UI/Spinner';\r\nimport ImageCarousel from '../UI/Card/Card';\r\nimport TextDisplay from '../UI/TextDisplay';\r\n\r\nconst MySells = props => {\r\n\r\n    useEffect( async () => {\r\n        props.startFetch();\r\n        props.getSellsData(props.user.id);\r\n    }, [] )\r\n\r\n    const deleteCurrentEntry = docId => {\r\n        const confirmation = window.confirm(\"Quer mesmo eliminar a referida venda/troca?\");\r\n        if (confirmation) props.deleteSell(docId, props.sells);\r\n    }\r\n\r\n    const updateDocData = docId => {\r\n        const confirmation = window.confirm(\"Completar troca/venda?\");\r\n        if ( !confirmation ) return;\r\n        let data = {...props.sells[docId]};\r\n        data[\"complete\"] = \"true\";\r\n        data[\"completionDate\"] = new Date().toISOString().slice(0, 10);\r\n        props.updateData( docId, data );\r\n    }\r\n\r\n    const generateSellDisplaysv2 = sells => (\r\n        <div className=\"sells-content\"> \r\n            { Object.keys(sells).map( key => <ImageCarousel key={sells[key].docId} docData={sells[key]} value={sells[key].docId}\r\n                                                        canDelete={deleteCurrentEntry}\r\n                                                        completeSell={updateDocData}\r\n                                                        location={props.location.pathname}/>\r\n                                                        ) }\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"my-sells\">\r\n            <div className=\"heading-display\">\r\n                { !props.fetchDone ? <Spinner /> : null }\r\n                <TextDisplay text=\"Minhas publicações\" headingType=\"h4\"/>\r\n            </div>\r\n            {  props.sells && props.fetchDone ? generateSellDisplaysv2(props.sells) : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        sells: state.userSells,\r\n        fetchDone: state.fetchDone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        startFetch: () => dispatch({type:actionTypes.START_FETCH}),\r\n        getSellsData: (userId) => dispatch(ReducerAPI.getUserSells(userId)),\r\n        deleteSell: (docId, sells) => dispatch(ReducerAPI.deleteSell(docId, sells)),\r\n        updateData: ( docId, data)  => dispatch(ReducerAPI.updateDocData( docId, data ) )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MySells);","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\ReduxStore\\actionTypes.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\NovaVenda\\NovaVenda.js",["80"],"import React, {useState, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './NovaVenda.css';\r\nimport CustomButton from '../UI/Button';\r\nimport * as reducerAPI from '..//ReduxStore/reducer';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {connect} from 'react-redux';\r\nimport ImagePreview from '../UI/BulkImagePreview/BulkImagePreview';\r\nimport Spinner from '../UI/Spinner';\r\nimport $ from 'jquery';\r\nimport TextDisplay from '../UI/TextDisplay';\r\n\r\nconst NovaVenda = props => {\r\n\r\n    const [input, setInput] = useState({\r\n                            title: \"\",\r\n                            description: \"\",\r\n                            price: \"\",\r\n                            images: null,\r\n                            phone_number: \"\",\r\n                            email: props.email,\r\n                            date: new Date().toISOString().slice(0, 10),\r\n                            profile_photo: props.photo,\r\n                            owner: props.userName,\r\n                            complete: \"false\",\r\n                            likeCount: 0,\r\n                            userId: props.userId\r\n                            });\r\n    \r\n    // images for preview\r\n    const [images, setImages] = useState(null);                        \r\n\r\n    const [createButtonClicked, setCreateButtonClicked] = useState( false );\r\n\r\n    useEffect( () => {\r\n        if (createButtonClicked && props.uploadDone) {\r\n            alert(\"Troca/venda criada!\");\r\n            props.history.push(\"/\");\r\n        }\r\n    }, [createButtonClicked, props.uploadDone]);\r\n\r\n    const postNewSell = () => {\r\n        var data = input;\r\n        if (data.price <= 0 || data.images === null) {\r\n            if (data.price <= 0) { alert(\"Preço não é válido!\"); return; }\r\n            if (data.images === null) { alert(\"Adicione pelo menos uma imagem!\"); return; }\r\n            setInput({\r\n                ...input,\r\n                price: 0\r\n            })\r\n            return;\r\n        }\r\n        props.uploadNewSell( data) ;\r\n        setCreateButtonClicked( true );\r\n    }\r\n\r\n    const handleImagesChange = ( value, targetValue ) => {\r\n        if ( value.length > 5 ) {\r\n            targetValue = null;\r\n            alert(\"Só pode adicionar no máximo 5 imagens!\");\r\n            $(\"input#images\").val(\"\");\r\n            setImages(null); \r\n            setInput({\r\n                ...input,\r\n                images: null\r\n            });\r\n            return;\r\n        }\r\n        let newImageState = [];\r\n        let images = [];\r\n        for (let image in value) {\r\n            if ( image === 'length' ) break;\r\n            newImageState.push(URL.createObjectURL( value[image]  ) );\r\n            images.push( value[image] );\r\n        }\r\n        setImages(newImageState); \r\n        setInput({\r\n            ...input,\r\n            images: images\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"heading\">\r\n                <TextDisplay text=\"Nova troca/venda\" headingType=\"h4\"/>\r\n            </div>\r\n            <form className=\"new-sell\" noValidate autoComplete=\"off\">\r\n                <TextField id=\"title\" label=\"Titulo da venda\" variant=\"outlined\" className=\"input\" onChange={(event) => setInput({...input,title: event.target.value})}/>\r\n                <TextField id=\"preco\" label=\"Preço\" variant=\"outlined\" className=\"input\" type=\"number\" value={input.price} onChange={(event) => setInput({...input,price: event.target.value})}\r\n                    InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\r\n                    }}\r\n                />\r\n                <TextField id=\"description\" label=\"Descrição (opcional)\" variant=\"outlined\" className=\"input\" multiline rows={7} onChange={(event) => setInput({...input,description: event.target.value})}/>\r\n                <TextField id=\"phone_number\" label=\"Contacto (opcional)\" variant=\"outlined\" className=\"input\" onChange={(event) => setInput({...input,phone_number: event.target.value})}/>\r\n                <TextField id=\"email\" label=\"Email\" variant=\"outlined\" className=\"input\" onChange={(event) => setInput({...input,email: event.target.value})} value={input.email} />\r\n                <input id=\"images\" type=\"file\" accept=\"image/*\" multiple onChange={(event) => handleImagesChange(event.target.files, event.target.value)} />\r\n                { images ? <ImagePreview bulkImages={images} /> : null }\r\n                { !props.uploadDone ? <Spinner className=\"new-sell-button\"/> : <CustomButton color=\"primary\" className=\"new-sell-button\" text=\"Criar\" click={postNewSell}/> }\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}        \r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        userId: state.user.id,\r\n        email: state.user.email,\r\n        photo: state.user.photo,\r\n        userName: state.user.name,\r\n        uploadDone: state.uploadDone\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadNewSell: data => dispatch( reducerAPI.uploadNewSell( data ) )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NovaVenda);","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\HomePage\\HomePage.js",["81","82","83","84","85"],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\Firebase\\Firebase.js",["86","87","88","89","90"],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\Spinner.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\TextDisplay.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\Card\\Card.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\Button.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\BulkImagePreview\\BulkImagePreview.js",["91"],"import React, {useState} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport './BulkImagePreview.css';\r\n\r\nconst BulkImagePreview = props => {                        \r\n    \r\n    const [currentImage, setCurrentImage] = useState(props.bulkImages[0]);     \r\n    \r\n    const [currentIndex, setCurrentIndex] = useState(0);     \r\n    \r\n    const changeCurrentImage = position => {\r\n        setCurrentImage(props.bulkImages[position]);\r\n        setCurrentIndex(position);\r\n    }\r\n\r\n    const chipForImages = () => {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"preview-images\">\r\n                    <img src={currentImage} width=\"200px\" height=\"200px\"/>\r\n                    <div className=\"images-chips\">\r\n                        { props.bulkImages.map( ( value, index ) => <Chip label={index + 1} key={value + index} className={currentIndex === index ? \"selected-chip\" : \"chips\"} onClick={ () => changeCurrentImage(index) }/>) }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n    return props.bulkImages ? chipForImages() : null;\r\n};\r\n\r\nexport default BulkImagePreview;","C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\Algolia\\Algolia.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\BoxList\\BoxList.js",[],"C:\\Users\\Admin\\Desktop\\Francisco\\Universidade\\Mestrado\\CP\\cp-project\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js",["92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":7,"column":9,"nodeType":"101","messageId":"102","endLine":7,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":12,"column":16,"nodeType":"105","endLine":15,"endColumn":6},{"ruleId":"103","severity":1,"message":"106","line":15,"column":8,"nodeType":"107","endLine":15,"endColumn":10,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":40,"column":8,"nodeType":"107","endLine":40,"endColumn":47,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"111","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"106","line":25,"column":8,"nodeType":"107","endLine":25,"endColumn":20,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":37,"column":43,"nodeType":"115","messageId":"116","endLine":37,"endColumn":50},{"ruleId":"113","severity":1,"message":"114","line":45,"column":44,"nodeType":"115","messageId":"116","endLine":45,"endColumn":51},{"ruleId":"117","severity":1,"message":"118","line":64,"column":29,"nodeType":"119","endLine":64,"endColumn":66},{"ruleId":"99","severity":1,"message":"120","line":48,"column":9,"nodeType":"101","messageId":"102","endLine":48,"endColumn":14},{"ruleId":"99","severity":1,"message":"121","line":69,"column":13,"nodeType":"101","messageId":"102","endLine":69,"endColumn":18},{"ruleId":"99","severity":1,"message":"122","line":71,"column":13,"nodeType":"101","messageId":"102","endLine":71,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":135,"column":61,"nodeType":"125","messageId":"126","endLine":135,"endColumn":63},{"ruleId":"123","severity":1,"message":"124","line":135,"column":76,"nodeType":"125","messageId":"126","endLine":135,"endColumn":78},{"ruleId":"117","severity":1,"message":"118","line":21,"column":21,"nodeType":"119","endLine":21,"endColumn":75},{"ruleId":"127","severity":1,"message":"128","line":80,"column":51,"nodeType":"129","messageId":"130","endLine":80,"endColumn":53},{"ruleId":"103","severity":1,"message":"106","line":91,"column":6,"nodeType":"107","endLine":91,"endColumn":14,"suggestions":"131"},{"ruleId":"103","severity":1,"message":"132","line":94,"column":3,"nodeType":"101","endLine":94,"endColumn":12,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'logout' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["137"],"'useState' is defined but never used.",["138"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["139"],"React Hook useEffect contains a call to 'setHits'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [search] as a second argument to the useEffect Hook.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [props]",{"range":"151","text":"152"},"Update the dependencies array to be: [createButtonClicked, props.history, props.uploadDone]",{"range":"153","text":"154"},"Update the dependencies array to be: [props, props.user]",{"range":"155","text":"156"},"Update the dependencies array to be: [props, search]",{"range":"157","text":"158"},"Add dependencies array: [search]",{"range":"159","text":"160"},[491,493],"[props]",[1574,1613],"[createButtonClicked, props.history, props.uploadDone]",[848,860],"[props, props.user]",[2748,2756],"[props, search]",[2843,2843],", [search]"]