[{"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\index.js":"1","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\App.js":"2","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\reducer.js":"3","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NavBar\\NavBar.js":"4","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\HomePage\\HomePage.js":"5","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NovaVenda\\NovaVenda.js":"6","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\MySells\\MySells.js":"7","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\actionTypes.js":"8","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Firebase\\Firebase.js":"9","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Button.js":"10","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Card\\Card.js":"11","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\TextDisplay.js":"12","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Spinner.js":"13","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Snackbar.js":"14","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\ConfirmDialog\\ConfirmDialog.js":"15","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js":"16","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BulkImagePreview\\BulkImagePreview.js":"17","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Algolia\\Algolia.js":"18","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BoxList\\BoxList.js":"19"},{"size":760,"mtime":1609150802159,"results":"20","hashOfConfig":"21"},{"size":840,"mtime":1609171146038,"results":"22","hashOfConfig":"21"},{"size":5755,"mtime":1610372441886,"results":"23","hashOfConfig":"21"},{"size":1700,"mtime":1610368037009,"results":"24","hashOfConfig":"21"},{"size":5785,"mtime":1610368037003,"results":"25","hashOfConfig":"21"},{"size":8255,"mtime":1610368620262,"results":"26","hashOfConfig":"21"},{"size":7897,"mtime":1610368473751,"results":"27","hashOfConfig":"21"},{"size":704,"mtime":1610368037015,"results":"28","hashOfConfig":"21"},{"size":7717,"mtime":1610372397196,"results":"29","hashOfConfig":"21"},{"size":369,"mtime":1609151607210,"results":"30","hashOfConfig":"21"},{"size":6911,"mtime":1610374192918,"results":"31","hashOfConfig":"21"},{"size":467,"mtime":1610368037031,"results":"32","hashOfConfig":"21"},{"size":217,"mtime":1610368037029,"results":"33","hashOfConfig":"21"},{"size":470,"mtime":1610368037026,"results":"34","hashOfConfig":"21"},{"size":1713,"mtime":1610368037024,"results":"35","hashOfConfig":"21"},{"size":4044,"mtime":1610370726316,"results":"36","hashOfConfig":"21"},{"size":2392,"mtime":1610371902012,"results":"37","hashOfConfig":"21"},{"size":1344,"mtime":1610371719794,"results":"38","hashOfConfig":"21"},{"size":867,"mtime":1609761299631,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1whupi1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\index.js",[],["80","81"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\App.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\reducer.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NavBar\\NavBar.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\HomePage\\HomePage.js",["82","83"],"import React, { useState, useEffect } from 'react';\r\nimport Button from '../UI/Button';\r\nimport './HomePage.css';\r\nimport {connect} from 'react-redux';\r\nimport * as ReducerAPI from '../ReduxStore/reducer';\r\nimport Card from '../UI/Card/Card';\r\nimport Spinner from '../UI/Spinner';\r\nimport * as actionTypes from '../ReduxStore/actionTypes';\r\nimport TextDisplay from '../UI/TextDisplay';\r\nimport poweredByGoogle from '../images/powered_by_google_on_white.png';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AlgoliaSearch from '../UI/AlgoliaSearch/AlgoliaSearch';\r\n\r\nconst HomePage = props => {\r\n    \r\n    const cachedCredential = sessionStorage.getItem('cp-persuasive-user');\r\n\r\n    const [ autoLoginStarted, setAutoLoginStarted ] = useState( false );\r\n\r\n    const redirect = path => {\r\n        props.history.replace(path);\r\n    }\r\n\r\n    const fetchDataOnClick = () => {   \r\n        props.initFetch();\r\n        props.fetchData(props.user.id);\r\n        props.getLikeList(props.user.id);\r\n    }\r\n\r\n    const loginButtonClick = () => props.login();\r\n\r\n    const generateSells = sells => (\r\n            <React.Fragment>\r\n                <div className=\"sells-content\"> \r\n                    { Object.keys(sells).map( ( sell, index )  => {\r\n                        if ( index  > 4 ) return null;\r\n                        return <Card key={sells[sell].docId} docData={sells[sell]} value={sells[sell].docId}/>;\r\n                     }) }\r\n                </div>\r\n                <hr className=\"horizontal-break\" />\r\n                <TextDisplay text=\"Mais publicações\" headingType=\"h5\" className=\"\"/>\r\n                <div className=\"sells-content\"> \r\n                    { Object.keys(sells).map( ( sell, index )  => {\r\n                        if ( index  <= 4 ) return null;\r\n                        return <Card key={sells[sell].docId} docData={sells[sell]} value={sells[sell].docId}/>;\r\n                     }) }\r\n                </div>\r\n                <div className=\"sells-content\">\r\n                    <AddIcon onClick={ fetchDataOnClick } fontSize=\"large\" className=\"load-more-icon\"/>\r\n                </div>\r\n            </React.Fragment>\r\n            );\r\n    \r\n    const informativeText = () => {\r\n        return (\r\n            <React.Fragment>\r\n                Nesta plataforma pode colocar anúncios de vendas dos seus produtos,\r\n                bem como ver anúncios de outras pessoas. O processo de venda ocorre externamente pela responsabilidades dos utilizadores.\r\n                <br/> <b>Dica de uso:</b> A qualquer momento pode clicar na bandeira do canto superior esquerdo para voltar à página inicial.\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    useEffect( () => {\r\n        if ( cachedCredential && !props.user ) loginButtonClick();\r\n        else if ( !cachedCredential && !props.user && sessionStorage.getItem('login-init') === 'true' ) {\r\n            props.login( true );\r\n            setAutoLoginStarted( true );\r\n        }\r\n        else if ( autoLoginStarted && props.user ) setAutoLoginStarted( false );\r\n    } )\r\n\r\n    useEffect( () => {\r\n        if ( !props.user ) return;\r\n        props.initFetch();\r\n        props.fetchData(props.user.id, true);\r\n        props.getLikeList(props.user.id);\r\n\r\n    }, [ props.user ] );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"homepage-content\">\r\n                { !props.fetchDone || ( cachedCredential  && !props.user ) || autoLoginStarted ? <Spinner /> : null}\r\n                \r\n                    { !props.user  ? \r\n                    <React.Fragment> \r\n                        <div className=\"homepage-buttons\">\r\n                            <div className=\"login-display\">\r\n                                { !cachedCredential && !autoLoginStarted ? \r\n                                    <Button color=\"primary\" text=\"Login\" className=\"buttons login\"  click={loginButtonClick} />\r\n                                    : null }\r\n                                <img src={poweredByGoogle} width=\"25px\" alt=\"poweredByGoogle\"/>\r\n                            </div>\r\n                        </div> \r\n                        <TextDisplay text={informativeText()} headingType=\"h6\"/>\r\n                    </React.Fragment>\r\n                    : <React.Fragment>\r\n                        <div className=\"homepage-buttons\">\r\n                            <Button text=\"Vender\" className=\"buttons blue\" click={ () => redirect(\"/nova-venda\")}/>\r\n                            <Button text=\"Minha área\" className=\"buttons yellow\" click={ () => redirect(\"/minhas-vendas\")}/>   \r\n                        </div>\r\n                        <AlgoliaSearch />\r\n                     </React.Fragment>\r\n                    }\r\n                \r\n                { props.otherSells && props.user && !props.searching ? \r\n                <React.Fragment>\r\n                    <TextDisplay text=\"Publicações mais curtidas\" headingType=\"h5\"/>\r\n                    { props.fetchDone ? generateSells( props.otherSells ) : null }\r\n                    </React.Fragment> \r\n                : null }\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        otherSells: state.otherSells,\r\n        fetchDone: state.fetchDone,\r\n        searching: state.searching\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: value => dispatch(ReducerAPI.tryLogin(value)),\r\n        initFetch: () => dispatch({type: actionTypes.START_FETCH}),\r\n        fetchData: (uId, limit = false) => dispatch(ReducerAPI.fetchOtherSells(uId, limit)),\r\n        getLikeList: (uId) => dispatch(ReducerAPI.getUserLikeList(uId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage);\r\n\r\n\r\n","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NovaVenda\\NovaVenda.js",["84","85"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\MySells\\MySells.js",["86","87"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\actionTypes.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Firebase\\Firebase.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Button.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Card\\Card.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\TextDisplay.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Spinner.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Snackbar.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\ConfirmDialog\\ConfirmDialog.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js",["88","89"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BulkImagePreview\\BulkImagePreview.js",["90"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Algolia\\Algolia.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BoxList\\BoxList.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":64,"column":5,"nodeType":"97","endLine":64,"endColumn":14,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":79,"column":8,"nodeType":"100","endLine":79,"endColumn":22,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"99","line":118,"column":8,"nodeType":"100","endLine":118,"endColumn":10,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"103","line":141,"column":8,"nodeType":"100","endLine":141,"endColumn":46,"suggestions":"104"},{"ruleId":"95","severity":1,"message":"99","line":113,"column":8,"nodeType":"100","endLine":113,"endColumn":10,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"106","line":122,"column":8,"nodeType":"100","endLine":122,"endColumn":39,"suggestions":"107"},{"ruleId":"95","severity":1,"message":"99","line":92,"column":6,"nodeType":"100","endLine":92,"endColumn":14,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"109","line":95,"column":3,"nodeType":"97","endLine":95,"endColumn":12,"suggestions":"110"},{"ruleId":"95","severity":1,"message":"111","line":29,"column":8,"nodeType":"100","endLine":29,"endColumn":25,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAutoLoginStarted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cachedCredential, props, loginButtonClick, autoLoginStarted] as a second argument to the useEffect Hook.","Identifier",["115"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["116"],["117"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["118"],["119"],"React Hook useEffect has missing dependencies: 'fetchLikedSells' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["120"],["121"],"React Hook useEffect contains a call to 'setHits'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [search] as a second argument to the useEffect Hook.",["122"],"React Hook useEffect has a missing dependency: 'currentSearch'. Either include it or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"128","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Add dependencies array: [cachedCredential, props, loginButtonClick, autoLoginStarted]",{"range":"141","text":"142"},"Update the dependencies array to be: [props, props.user]",{"range":"143","text":"144"},"Update the dependencies array to be: [props]",{"range":"145","text":"146"},"Update the dependencies array to be: [createButtonClicked, alertOkClicked, props.history]",{"range":"147","text":"148"},{"range":"149","text":"146"},"Update the dependencies array to be: [currentTab, fetchLikedSells, props, props.userLikes]",{"range":"150","text":"151"},"Update the dependencies array to be: [props, search]",{"range":"152","text":"153"},"Add dependencies array: [search]",{"range":"154","text":"155"},"Update the dependencies array to be: [currentSearch, props.searching]",{"range":"156","text":"157"},[3050,3050],", [cachedCredential, props, loginButtonClick, autoLoginStarted]",[3243,3257],"[props, props.user]",[4106,4108],"[props]",[4806,4844],"[createButtonClicked, alertOkClicked, props.history]",[4175,4177],[4389,4420],"[currentTab, fetchLikedSells, props, props.userLikes]",[2764,2772],"[props, search]",[2859,2859],", [search]",[1013,1030],"[currentSearch, props.searching]"]