[{"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\index.js":"1","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\App.js":"2","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\reducer.js":"3","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NavBar\\NavBar.js":"4","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\HomePage\\HomePage.js":"5","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NovaVenda\\NovaVenda.js":"6","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\MySells\\MySells.js":"7","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\actionTypes.js":"8","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Firebase\\Firebase.js":"9","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Button.js":"10","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Card\\Card.js":"11","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\TextDisplay.js":"12","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Spinner.js":"13","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Snackbar.js":"14","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\ConfirmDialog\\ConfirmDialog.js":"15","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js":"16","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BulkImagePreview\\BulkImagePreview.js":"17","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Algolia\\Algolia.js":"18","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BoxList\\BoxList.js":"19"},{"size":760,"mtime":1609150802159,"results":"20","hashOfConfig":"21"},{"size":840,"mtime":1609171146038,"results":"22","hashOfConfig":"21"},{"size":5592,"mtime":1610467197291,"results":"23","hashOfConfig":"21"},{"size":1700,"mtime":1610379052319,"results":"24","hashOfConfig":"21"},{"size":6207,"mtime":1610468756857,"results":"25","hashOfConfig":"21"},{"size":8255,"mtime":1610368620262,"results":"26","hashOfConfig":"21"},{"size":7912,"mtime":1610472933784,"results":"27","hashOfConfig":"21"},{"size":704,"mtime":1610368037015,"results":"28","hashOfConfig":"21"},{"size":7810,"mtime":1610466098338,"results":"29","hashOfConfig":"21"},{"size":369,"mtime":1609151607210,"results":"30","hashOfConfig":"21"},{"size":6746,"mtime":1610472537617,"results":"31","hashOfConfig":"21"},{"size":467,"mtime":1610368037031,"results":"32","hashOfConfig":"21"},{"size":217,"mtime":1610368037029,"results":"33","hashOfConfig":"21"},{"size":470,"mtime":1610368037026,"results":"34","hashOfConfig":"21"},{"size":1713,"mtime":1610368037024,"results":"35","hashOfConfig":"21"},{"size":4114,"mtime":1610464964650,"results":"36","hashOfConfig":"21"},{"size":1576,"mtime":1610446838489,"results":"37","hashOfConfig":"21"},{"size":741,"mtime":1610468893753,"results":"38","hashOfConfig":"21"},{"size":867,"mtime":1609761299631,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1whupi1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\index.js",[],["81","82"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\App.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\reducer.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NavBar\\NavBar.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\HomePage\\HomePage.js",["83","84"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NovaVenda\\NovaVenda.js",["85","86"],"import React, {useState, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './NovaVenda.scss';\r\nimport CustomButton from '../UI/Button';\r\nimport * as reducerAPI from '..//ReduxStore/reducer';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {connect} from 'react-redux';\r\nimport ImagePreview from '../UI/BulkImagePreview/BulkImagePreview';\r\nimport Spinner from '../UI/Spinner';\r\nimport $ from 'jquery';\r\nimport TextDisplay from '../UI/TextDisplay';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConfirmDialog from '../UI/ConfirmDialog/ConfirmDialog';\r\nimport * as actionTypes from '../ReduxStore/actionTypes';\r\n\r\nconst NovaVenda = props => {\r\n\r\n    const [input, setInput] = useState({\r\n                            title: \"\",\r\n                            description: \"\",\r\n                            price: \"\",\r\n                            images: null,\r\n                            phone_number: \"\",\r\n                            email: props.email,\r\n                            date: new Date().toISOString().slice(0, 10),\r\n                            profile_photo: props.photo,\r\n                            owner: props.userName,\r\n                            complete: \"false\",\r\n                            likeCount: 0,\r\n                            userId: props.userId\r\n                            });\r\n    \r\n    // images for preview\r\n    const [images, setImages] = useState(null);                        \r\n\r\n    const [createButtonClicked, setCreateButtonClicked] = useState( false );\r\n\r\n    const [ alertDialogSettings, setAlertDialogSettings ] = useState( {\r\n        title: null,\r\n        description: null,\r\n        show: false,\r\n        disableBackdrop: false\r\n    });\r\n\r\n    const [ alertOkClicked, setAlertOkClicked ] = useState( false );\r\n\r\n    const postNewSell = () => {\r\n        var data = input;\r\n        if (data.price <= 0 || data.images === null) {\r\n            if (data.title === \"\") { \r\n                setAlertDialogSettings( {\r\n                    title: \"Adicione um título!\",\r\n                    description: null,\r\n                    show: true\r\n                })\r\n                return; \r\n            }\r\n            if (data.price <= 0) { \r\n                setAlertDialogSettings( {\r\n                    title: \"Preço não é válido!\",\r\n                    description: \"O preço tem de ser superior a 0.\",\r\n                    show: true\r\n                })\r\n                return; \r\n            }\r\n            if (data.images === null) { \r\n                setAlertDialogSettings( {\r\n                    title: \"Adicione pelo menos uma imagem!\",\r\n                    description: null,\r\n                    show: true\r\n                })\r\n                return; \r\n            }\r\n            setInput({\r\n                ...input,\r\n                price: 0\r\n            })\r\n            return;\r\n        }\r\n        props.uploadNewSell( data) ;\r\n        setCreateButtonClicked( true );\r\n    }\r\n\r\n    const handleImagesChange = ( value, targetValue ) => {\r\n        if ( value.length > 5 ) {\r\n            targetValue = null;\r\n            setAlertDialogSettings( {\r\n                title: \"Só pode adicionar no máximo 5 imagens!\",\r\n                description: null,\r\n                show: true\r\n            })\r\n            $(\"input#images\").val(\"\");\r\n            setImages(null); \r\n            setInput({\r\n                ...input,\r\n                images: null\r\n            });\r\n            return;\r\n        }\r\n        let newImageState = [];\r\n        let images = [];\r\n        for (let image in value) {\r\n            if ( image === 'length' ) break;\r\n            newImageState.push(URL.createObjectURL( value[image]  ) );\r\n            images.push( value[image] );\r\n        }\r\n        setImages(newImageState); \r\n        setInput({\r\n            ...input,\r\n            images: images\r\n        });\r\n    }\r\n\r\n    useEffect( () => {\r\n        if ( props.searching ) props.toggleSearch();\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        if (createButtonClicked && props.uploadDone) {\r\n            setAlertDialogSettings( {\r\n                title: \"Troca criada!\",\r\n                description: null,\r\n                show: true,\r\n                disableBackdrop: true\r\n            })\r\n        }\r\n    }, [createButtonClicked, props.uploadDone]);\r\n\r\n    useEffect( () => {\r\n        if ( createButtonClicked && alertOkClicked) props.history.push(\"/\");\r\n        else if ( alertOkClicked ) {\r\n            setAlertDialogSettings( {\r\n                title: null,\r\n                description: null,\r\n                show: false\r\n            })\r\n            setAlertOkClicked( false );\r\n        }\r\n    }, [createButtonClicked, alertOkClicked ] )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"heading\">\r\n                <TextDisplay text=\"Nova venda\" headingType=\"h5\"/>\r\n            </div>\r\n            <form className=\"new-sell\" noValidate autoComplete=\"off\">\r\n                <TextField id=\"title\" label=\"Titulo da venda\" variant=\"outlined\" className=\"input\" onChange={(event) => setInput({...input,title: event.target.value})}/>\r\n                <TextField id=\"preco\" label=\"Preço\" variant=\"outlined\" className=\"input\" type=\"number\" value={input.price} onChange={(event) => setInput({...input,price: event.target.value})}\r\n                    InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">€</InputAdornment>,\r\n                    }}\r\n                />\r\n                <TextField id=\"description\" label=\"Descrição (opcional)\" variant=\"outlined\" className=\"input\" multiline rows={7} onChange={(event) => setInput({...input,description: event.target.value})}/>\r\n                <TextField id=\"phone_number\" label=\"Contacto (opcional)\" variant=\"outlined\" className=\"input\" onChange={(event) => setInput({...input,phone_number: event.target.value})}/>\r\n                <TextField id=\"email\" label=\"Email\" variant=\"outlined\" className=\"input\" onChange={(event) => setInput({...input,email: event.target.value})} value={input.email} />\r\n                \r\n                <input accept=\"image/*\" id=\"contained-button-file\" type=\"file\" multiple onChange={(event) => handleImagesChange(event.target.files, event.target.value)} />\r\n                <label htmlFor=\"contained-button-file\" className=\"upload-container\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\" className=\"upload-button\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" className=\"upload-photo-icon\">\r\n                            <PhotoCamera />\r\n                        </IconButton>\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n                { images ? <ImagePreview bulkImages={images} /> : null }\r\n                { !props.uploadDone ? <Spinner className=\"spinner-my-sells\"/> : <CustomButton color=\"primary\" className=\"new-sell-button\" text=\"Criar\" click={postNewSell}/> }\r\n            </form>\r\n            <ConfirmDialog alert disableEscapeKeyDown={alertDialogSettings.disableBackdrop} disableBackdropClick={alertDialogSettings.disableBackdrop} \r\n                        title={alertDialogSettings.title} description={alertDialogSettings.description} \r\n                        open={alertDialogSettings.show} click={ () => setAlertOkClicked( true ) } \r\n                        onClose={ () => setAlertDialogSettings( {...alertDialogSettings, show: false} ) } />\r\n        </React.Fragment>\r\n    );\r\n}        \r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        userId: state.user.id,\r\n        email: state.user.email,\r\n        photo: state.user.photo,\r\n        userName: state.user.name,\r\n        uploadDone: state.uploadDone,\r\n        searching: state.searching\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        uploadNewSell: data => dispatch( reducerAPI.uploadNewSell( data ) ),\r\n        toggleSearch: () => dispatch( { type: actionTypes.TOGGLE_SEARCH } )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NovaVenda);\r\n","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\MySells\\MySells.js",["87","88"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\actionTypes.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Firebase\\Firebase.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Button.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Card\\Card.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\TextDisplay.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Spinner.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Snackbar.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\ConfirmDialog\\ConfirmDialog.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js",["89","90"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BulkImagePreview\\BulkImagePreview.js",["91"],"import React, {useEffect, useState} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport './BulkImagePreview.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst BulkImagePreview = props => {                        \r\n    \r\n    const [currentImage, setCurrentImage] = useState(props.bulkImages[0]);     \r\n    \r\n    const [currentIndex, setCurrentIndex] = useState(0);     \r\n    \r\n    const [ imageExpand, setImageExpand] = useState( false );\r\n\r\n    const changeCurrentImage = position => {\r\n        setCurrentImage(props.bulkImages[position]);\r\n        setCurrentIndex(position);\r\n    }\r\n\r\n    const chipForImages = () => {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"preview-images\">\r\n                    <img alt=\"selected\" className={ imageExpand ? \"img-clicked\" : \"\"} src={currentImage} width=\"200px\" height=\"200px\" id=\"img-to-zoom\" onClick={ () => setImageExpand( !imageExpand ) }/>\r\n                    <div className=\"images-chips\">\r\n                        { props.bulkImages.map( ( value, index ) => <Chip label={index + 1} key={value + index} className={currentIndex === index ? \"selected-chip\" : \"chips\"} onClick={ () => changeCurrentImage(index) }/>) }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n    return props.bulkImages ? chipForImages() : null;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searching: state.searching,\r\n        userId: state.user.id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BulkImagePreview);","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Algolia\\Algolia.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BoxList\\BoxList.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":64,"column":5,"nodeType":"98","endLine":64,"endColumn":14,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":85,"column":8,"nodeType":"101","endLine":85,"endColumn":22,"suggestions":"102"},{"ruleId":"96","severity":1,"message":"100","line":118,"column":8,"nodeType":"101","endLine":118,"endColumn":10,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":141,"column":8,"nodeType":"101","endLine":141,"endColumn":46,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"100","line":113,"column":8,"nodeType":"101","endLine":113,"endColumn":10,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"107","line":122,"column":8,"nodeType":"101","endLine":122,"endColumn":22,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"100","line":93,"column":6,"nodeType":"101","endLine":93,"endColumn":14,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"110","line":96,"column":3,"nodeType":"98","endLine":96,"endColumn":12,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":16,"nodeType":"98","messageId":"114","endLine":1,"endColumn":25},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setAutoLoginStarted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cachedCredential, props, loginButtonClick, autoLoginStarted] as a second argument to the useEffect Hook.","Identifier",["117"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["118"],["119"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["120"],["121"],"React Hook useEffect has missing dependencies: 'fetchLikedSells' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["122"],["123"],"React Hook useEffect contains a call to 'setHits'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [search] as a second argument to the useEffect Hook.",["124"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"129","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Add dependencies array: [cachedCredential, props, loginButtonClick, autoLoginStarted]",{"range":"140","text":"141"},"Update the dependencies array to be: [props, props.user]",{"range":"142","text":"143"},"Update the dependencies array to be: [props]",{"range":"144","text":"145"},"Update the dependencies array to be: [createButtonClicked, alertOkClicked, props.history]",{"range":"146","text":"147"},{"range":"148","text":"145"},"Update the dependencies array to be: [currentTab, fetchLikedSells, props]",{"range":"149","text":"150"},"Update the dependencies array to be: [props, search]",{"range":"151","text":"152"},"Add dependencies array: [search]",{"range":"153","text":"154"},[3337,3337],", [cachedCredential, props, loginButtonClick, autoLoginStarted]",[3556,3570],"[props, props.user]",[4106,4108],"[props]",[4806,4844],"[createButtonClicked, alertOkClicked, props.history]",[4175,4177],[4389,4403],"[currentTab, fetchLikedSells, props]",[2832,2840],"[props, search]",[2927,2927],", [search]"]