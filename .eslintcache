[{"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\index.js":"1","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\App.js":"2","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\reducer.js":"3","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NavBar\\NavBar.js":"4","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NovaVenda\\NovaVenda.js":"5","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\MySells\\MySells.js":"6","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\HomePage\\HomePage.js":"7","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\actionTypes.js":"8","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Firebase\\Firebase.js":"9","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Button.js":"10","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\TextDisplay.js":"11","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BulkImagePreview\\BulkImagePreview.js":"12","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Spinner.js":"13","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Card\\Card.js":"14","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js":"15","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Algolia\\Algolia.js":"16","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BoxList\\BoxList.js":"17"},{"size":760,"mtime":1609150802159,"results":"18","hashOfConfig":"19"},{"size":840,"mtime":1609171146038,"results":"20","hashOfConfig":"19"},{"size":5067,"mtime":1609952018642,"results":"21","hashOfConfig":"19"},{"size":1698,"mtime":1610040378664,"results":"22","hashOfConfig":"19"},{"size":5915,"mtime":1610040404535,"results":"23","hashOfConfig":"19"},{"size":3542,"mtime":1610043321696,"results":"24","hashOfConfig":"19"},{"size":4263,"mtime":1610040474272,"results":"25","hashOfConfig":"19"},{"size":649,"mtime":1609952018640,"results":"26","hashOfConfig":"19"},{"size":6663,"mtime":1609952018636,"results":"27","hashOfConfig":"19"},{"size":369,"mtime":1609151607210,"results":"28","hashOfConfig":"19"},{"size":273,"mtime":1609761299640,"results":"29","hashOfConfig":"19"},{"size":4291,"mtime":1610041841561,"results":"30","hashOfConfig":"19"},{"size":170,"mtime":1609761299639,"results":"31","hashOfConfig":"19"},{"size":6260,"mtime":1610040522889,"results":"32","hashOfConfig":"19"},{"size":3975,"mtime":1609956233590,"results":"33","hashOfConfig":"19"},{"size":661,"mtime":1609867452934,"results":"34","hashOfConfig":"19"},{"size":867,"mtime":1609761299631,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1whupi1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\index.js",[],["73","74"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\App.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\reducer.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NavBar\\NavBar.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\NovaVenda\\NovaVenda.js",["75"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\MySells\\MySells.js",["76","77","78"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\HomePage\\HomePage.js",["79","80","81","82","83"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\ReduxStore\\actionTypes.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Firebase\\Firebase.js",["84","85","86","87","88"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nimport * as AlgoliaAPI from '../Algolia/Algolia';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCbWuEYkJoYvCm5jL1MTZC_JT1OsBH3V2E\",\r\n    authDomain: \"cp-project-18016.firebaseapp.com\",\r\n    projectId: \"cp-project-18016\",\r\n    storageBucket: \"cp-project-18016.appspot.com\",\r\n    messagingSenderId: \"635549024327\",\r\n    appId: \"1:635549024327:web:eb263e26a5fda4c4873162\"\r\n};\r\n\r\nlet db;\r\n\r\nconst SELLS_DATA = \"sells_data\";\r\nconst USER_DATA = \"user_data\";\r\n\r\nexport const logout = () => {\r\n    firebase.auth().signOut().then(function() {\r\n    // Sign-out successful.\r\n    }).catch(function(error) {\r\n        // An error happened.\r\n    });\r\n}\r\n\r\nexport const login = () => {\r\n    var userData;\r\n\r\n    // Initialize Firebase\r\n\r\n    if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n    }else {\r\n    firebase.app(); // if already initialized, use that one\r\n    }\r\n\r\n    firebase.auth().languageCode = 'pt';\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    return firebase.auth().signInWithPopup(provider).then(function(result) {\r\n\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    var token = result.credential.accessToken;\r\n    // The signed-in user info.\r\n    var user = result.user;\r\n\r\n    userData = {\r\n        name: user.displayName,\r\n        photo: user.photoURL,\r\n        id: user.uid,\r\n        email: user.email\r\n    }\r\n    \r\n    db = firebase.firestore();\r\n    \r\n    return userData;\r\n\r\n    // ...\r\n    }).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n        return errorCode + errorMessage;\r\n    });\r\n}\r\n\r\nexport const updateDocumentData = (docId, data) => {\r\n    const dbRef = db.collection(SELLS_DATA).doc(docId);\r\n    AlgoliaAPI.updateAlgolia( data );\r\n    return dbRef.update(data).then( response => response).catch( error => console.error( error ) );\r\n}\r\n\r\nexport const addDocument = async (collectionId, docId = null, data) => {\r\n    const dbRef = docId ? db.collection(collectionId).doc(docId) : db.collection(collectionId).doc();\r\n    if ( collectionId === SELLS_DATA ) data[\"docId\"] = dbRef.id;\r\n    await dbRef.set(data).then().catch( error => console.error( error ) );\r\n    return data;\r\n}\r\n\r\n// getting data\r\nexport const getUserData = userId => db.collection(USER_DATA).doc(userId).get().then().catch( error => console.error( error ) );\r\n\r\nconst getDocumentsOrdered = () => db.collection(SELLS_DATA).orderBy(\"likeCount\", \"desc\").get().then( response => response).catch(error => console.error( error ) );\r\nconst getDocumentsOrderedCurrentUser = filter => db.collection(SELLS_DATA).where(filter.row, filter.comparator, filter.givenFilter).orderBy(\"likeCount\", \"desc\").get().then( response => response).catch(error => console.error( error ) );\r\n// getting data\r\n\r\nexport const deleteDocument = docId => {\r\n    return db.collection(SELLS_DATA).doc(docId).delete().then(function() {\r\n        console.log(\"Document successfully deleted!\");\r\n        AlgoliaAPI.deleteAlgolia( docId );\r\n    }).catch(function(error) {\r\n        console.error(\"Error removing document: \", error);\r\n    });\r\n}\r\n\r\nconst postImages = async ( uId, images ) => {\r\n    await images.map(async image => {\r\n        // Create a root reference\r\n        let storageRef = firebase.storage().ref();\r\n        let completeRef = storageRef.child('images/' + uId + '/' + image.name);\r\n        let file = image;\r\n        await completeRef.put(file).then().catch(error => console.error( error ) );\r\n        });\r\n};\r\n\r\nconst getImageUrl = ( uId, imageName ) => {\r\n    let storageRef = firebase.storage().ref();\r\n        \r\n    let completeRef = storageRef.child('images/' + uId + '/' + imageName);\r\n    return completeRef.getDownloadURL().then( response => response ).catch(error => console.error( error ) );\r\n}\r\n\r\nexport const getBulkImageUrl = async (uId, images) => (\r\n    await Promise.all(images.map(async image => await getImageUrl(uId, image )\r\n                                                    .then( response =>  response)\r\n                                                    .catch(error => console.error( error ) ) ) )\r\n)\r\n\r\nconst addImagesToData = async ( data, uId = null , limit = false ) => {\r\n    let resultingData = {};\r\n    let count = 1;\r\n    await data.docs.reduce( async (acc, doc) => {\r\n        await acc;\r\n        let currentData = doc.data();\r\n        if ( uId === currentData.userId || ( uId && ( limit && count === 6 || currentData.complete === 'true' ) ) ) return;\r\n        currentData[\"docId\"] = doc.id;\r\n        await getBulkImageUrl( currentData.userId, currentData.images).then( response => currentData[\"imagesUrl\"] = response ).catch(error => console.error( error ) );    \r\n        resultingData[doc.id] = currentData;\r\n        count++;\r\n        }, Promise.resolve()\r\n    );\r\n    return resultingData;\r\n}\r\n\r\nexport const postData = async data => {\r\n    const dataCorrectImageList = {...data};\r\n    dataCorrectImageList[\"images\"] = dataCorrectImageList[\"images\"].map( img => img.name);\r\n    let dataForAlgolia;\r\n    \r\n    await addDocument( SELLS_DATA, null, dataCorrectImageList).then( response => {\r\n        dataForAlgolia = response;\r\n        console.log(\"Document successfully posted!\");\r\n    }).catch(error => console.error( error ) );\r\n    await postImages( data.userId , data[\"images\"] ).then( () => console.log(\"Images successfully posted!\")).catch(error => console.error( error ) );\r\n    \r\n    AlgoliaAPI.postAlgolia( dataForAlgolia );\r\n}\r\n\r\nexport const fetchUserData = async uId => {\r\n    let data = {};\r\n    await getDocumentsOrderedCurrentUser( {\"row\": \"userId\", \"comparator\": \"==\", \"givenFilter\": uId} )\r\n            .then( async fetchedData => await addImagesToData(fetchedData).then( response => data = response).catch(error => console.error( error ) ))\r\n            .catch(error => console.error( error ) );\r\n    return data;\r\n}\r\n\r\nexport const fetchAllData = async ( uId, limit ) => {\r\n    let data = {};\r\n    await getDocumentsOrdered().then( async fetchedData => {\r\n            await addImagesToData( fetchedData, uId , limit).then( response => data = response).catch(error => console.error( error ) );\r\n        })\r\n        .catch(error => console.error( error ) );\r\n    return data;\r\n}\r\n","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Button.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\TextDisplay.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BulkImagePreview\\BulkImagePreview.js",["89","90","91","92","93","94","95"],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Spinner.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\Card\\Card.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\AlgoliaSearch\\AlgoliaSearch.js",["96","97","98"],"import algoliasearch from 'algoliasearch/lite';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Card from '../Card/Card';\r\nimport { getBulkImageUrl } from '../../Firebase/Firebase';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../ReduxStore/actionTypes';\r\nimport Spinner from '../Spinner';\r\nimport './AlgoliaSearch.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nconst searchClient = algoliasearch(\r\n  'BUC2AFISV8',\r\n  '3347ced814c369f956cf3fa1bc564dd9'\r\n);\r\nconst index = searchClient.initIndex('search-sells');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n    marginBottom: '20px'\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%'\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%'\r\n  },\r\n}));\r\n\r\n\r\nconst AlgoliaSearch = props => {\r\n  const classes = useStyles();\r\n\r\n  const [ hits, setHits ] = useState(null);\r\n\r\n  const [ loading, setLoading ] = useState(false);\r\n\r\n  const [ search, setSearch ] = useState(null);\r\n\r\n  const fetchCompleteData = async hits => (\r\n    await Promise.all( hits.map( async hit => { \r\n      let completeHitData = hit;\r\n      await getBulkImageUrl( hit.userId, hit.images ).then( response => completeHitData[\"imagesUrl\"] = response ).catch(error => console.error( error ) );\r\n      return completeHitData;\r\n    }) )\r\n)\r\n\r\n  useEffect( () => {\r\n      if ( search && search.length >= 3 && search != '' ) {\r\n        if ( !props.searching ) props.toggleSearch();\r\n        setLoading( true );\r\n        index.search(search).then( ({ hits }) => fetchCompleteData( hits ).then( response => { \r\n          setLoading( false );\r\n          setHits( response );\r\n        }) );\r\n        return;\r\n      }\r\n      setHits( null );\r\n      if ( props.searching ) props.toggleSearch();\r\n  }, [search]);\r\n\r\n  // hotfix\r\n  useEffect( () => {\r\n    if ( search === '' ) setHits( null );\r\n  });\r\n\r\n    return ( \r\n      <React.Fragment>\r\n        <div className={classes.search + \" search-container\"}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Digite...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={ e => setSearch(e.target.value) }\r\n            />\r\n        </div>\r\n        { loading ? <Spinner /> : null }\r\n        { hits ? \r\n          <div className=\"algo-search-cards\">\r\n            {hits.map( hit => <Card key={ hit.docId } docData={ hit }  value={ hit.docId } /> ) } \r\n          </div>\r\n          : null } \r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searching: state.searching\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleSearch: () => dispatch({type: actionTypes.TOGGLE_SEARCH})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AlgoliaSearch);\r\n","C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\Algolia\\Algolia.js",[],"C:\\Users\\fpon\\Documents\\Work\\Mine\\Uni\\cp\\projeto\\trocas-e-vendas-madeira\\src\\UI\\BoxList\\BoxList.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":43,"column":8,"nodeType":"105","endLine":43,"endColumn":47,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":16,"column":16,"nodeType":"108","endLine":19,"endColumn":6},{"ruleId":"103","severity":1,"message":"109","line":19,"column":8,"nodeType":"105","endLine":19,"endColumn":10,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":38,"column":72,"nodeType":"113","messageId":"114","endLine":38,"endColumn":79},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"109","line":26,"column":8,"nodeType":"105","endLine":26,"endColumn":20,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"112","line":38,"column":43,"nodeType":"113","messageId":"114","endLine":38,"endColumn":50},{"ruleId":"111","severity":1,"message":"112","line":46,"column":44,"nodeType":"113","messageId":"114","endLine":46,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":65,"column":29,"nodeType":"122","endLine":65,"endColumn":71},{"ruleId":"115","severity":1,"message":"123","line":48,"column":9,"nodeType":"117","messageId":"118","endLine":48,"endColumn":14},{"ruleId":"115","severity":1,"message":"124","line":69,"column":13,"nodeType":"117","messageId":"118","endLine":69,"endColumn":18},{"ruleId":"115","severity":1,"message":"125","line":71,"column":13,"nodeType":"117","messageId":"118","endLine":71,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":135,"column":61,"nodeType":"128","messageId":"129","endLine":135,"endColumn":63},{"ruleId":"126","severity":1,"message":"127","line":135,"column":76,"nodeType":"128","messageId":"129","endLine":135,"endColumn":78},{"ruleId":"115","severity":1,"message":"130","line":1,"column":26,"nodeType":"117","messageId":"118","endLine":1,"endColumn":35},{"ruleId":"115","severity":1,"message":"131","line":16,"column":11,"nodeType":"117","messageId":"118","endLine":16,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":32,"column":44,"nodeType":"117","messageId":"134","endLine":32,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":33,"column":43,"nodeType":"117","messageId":"134","endLine":33,"endColumn":51},{"ruleId":"132","severity":1,"message":"133","line":35,"column":44,"nodeType":"117","messageId":"134","endLine":35,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":36,"column":43,"nodeType":"117","messageId":"134","endLine":36,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":86,"column":21,"nodeType":"122","endLine":86,"endColumn":92},{"ruleId":"135","severity":1,"message":"136","line":80,"column":51,"nodeType":"137","messageId":"138","endLine":80,"endColumn":53},{"ruleId":"103","severity":1,"message":"109","line":91,"column":6,"nodeType":"105","endLine":91,"endColumn":14,"suggestions":"139"},{"ruleId":"103","severity":1,"message":"140","line":94,"column":3,"nodeType":"117","endLine":94,"endColumn":12,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["144"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["145"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'token' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useEffect' is defined but never used.","'imageZoom' is assigned a value but never used.","no-use-before-define","'moveLens' was used before it was defined.","usedBeforeDefined","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["147"],"React Hook useEffect contains a call to 'setHits'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [search] as a second argument to the useEffect Hook.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [createButtonClicked, props.history, props.uploadDone]",{"range":"159","text":"160"},"Update the dependencies array to be: [props]",{"range":"161","text":"162"},"Update the dependencies array to be: [props, props.user]",{"range":"163","text":"164"},"Update the dependencies array to be: [props, search]",{"range":"165","text":"166"},"Add dependencies array: [search]",{"range":"167","text":"168"},[1737,1776],"[createButtonClicked, props.history, props.uploadDone]",[674,676],"[props]",[870,882],"[props, props.user]",[2748,2756],"[props, search]",[2843,2843],", [search]"]